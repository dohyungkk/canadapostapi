var xml2js = require('xml2js');
// var xpath = require('xml2js-xpath');
var xpath = require('./xpath.js');

var parser = new xml2js.Parser();
var xml = '<ZiptieElementDocument> <interfaces> <interface name="test1" type="err"/> <interface name="test2" type="err"/> <interface name="test3" type="err"/> <interface name="test4" type="err">textvalue</interface> </interfaces> </ZiptieElementDocument>';

parser.parseString(xml, function (error, result) {
	// If you only want to evaluate the first property in the results you can
	// use the convenience function 'evalFirst'
	console.log(xpath.evalFirst(result, '//interface','name'));
	// returns 'test1'

	// Otherwise you have to parse the content that would be returned for each
	// matching node by xml2js (which can be a little weird):
	console.log(xpath.find(result, '//interface').map(function (v) { return v['$']['name'] }));
	// returns [ 'test1', 'test2', 'test3' ]

	console.log(xpath.jsonText(result));
});
